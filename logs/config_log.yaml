# Used default values from loguru._defaults
############################################################

# The severity levels
# Level name	Severity value	Logger method
# TRACE	        5	            logger.trace()
# DEBUG	        10	            logger.debug()
# INFO	        20	            logger.info()
# SUCCESS	    25	            logger.success()
# WARNING	    30	            logger.warning()
# ERROR	        40	            logger.error()
# CRITICAL	    50	            logger.critical()

### TRACE : log3, DEBUG: log2, INFO: log, WARNING: log2,
level     : TRACE


format    : "<level>{message}</level>"
filter    :
colorize  : True
serialize : False
backtrace : True
diagnose  : True
enqueue   : False
catch     : True



#1 rotation="500 MB")    # Automatically rotate too big file
#2 rotation="12:00")     # New file is created each day at noon
#3 rotation="1 week")    # Once the file is too old, it's rotated
#X retention="10 days")  # Cleanup after some time
#Y compression="zip")    # Save some loved space
rotation  : "00:00"



handlers :
    default:
        - sink: "sys.stdout"
          format: "<level>{level: <8}</level>|<level>{message}</level>"
          #format: "<green>{time:DD.MM.YY HH:mm:ss}</green> | <level>{level}</level> | <level>{message}</level>"

        #- sink: "sys.stderr"
        #  serialize: False
        #  format: "<green>{time:DD.MM.YY HH:mm:ss}</green> | <level>{level}</level> | <level>{message}</level>"

    debug0:
        - sink: "sys.stdout"
          format: "<level>{level: <8}</level>|{name: ^15}|{function: ^15}|{line: >3}|<level>{message}</level>"

        - sink: "debug0.log"
          serialize : False   ## into json format
          colorize  : False
          enqueue   : True    ### Thread Safe
          format    : "{time:DD.MM.YY HH:mm:ss}|<level>{level: <8}</level>|{name: ^15}|{function: ^15}|{line: >3}|<level>{message}</level>"
          rotation  : "5 min"


    debug1:
        - sink: "sys.stdout"
          format: "<green>{time:DD.MM.YY HH:mm:ss}</green>|<level>{level: <8}</level>|{name: ^15}|{function: ^15}|{line: >3}|<level>{message}</level>"

        - sink: "mydebug2.log"
          serialize: False
          format:    "{time:DD.MM.YY HH:mm:ss}|<level>{level: <8}</level>|{name: ^15}|{function: ^15}|{line: >3}|<level>{message}</level>"


    debug2:
        - sink: "sys.stdout"
          format: "<green>{time:DD.MM.YY HH:mm:ss}</green>|<level>{level: <8}</level>|{name: ^15}|{function: ^15}|{line: >3}|<level>{message}</level>"

        - sink: "mydebug2.log"
          serialize: True

    mytemplate3:
        - sink: "sys.stdout"
          format: "<green>{time:DD.MM.YY HH:mm:ss}</green> | <level>{level}</level> | <level>{message}</level>"
        - sink: "file.log"
          serialize: False
          rotation  : "10 days"



    mytemplate2:
        - sink: "sys.stdout"
          format: "<green>{time:DD.MM.YY HH:mm:ss}</green> | <level>{level}</level> | <level>{message}</level>"
        - sink: "sys.stderr"
          serialize: False
          format: "<green>{time:DD.MM.YY HH:mm:ss}</green> | <level>{level}</level> | <level>{message}</level>"



    mytemplate4:
        - sink  : "sys.stdout"
          format: "<green>{time:DD.MM.YY HH:mm:ss}</green>|<level>{level: <8}</level>|{name: ^15}|{function: ^15}|{line: >3}|<level>{message}</level>"
        - sink: "mytemplate4.log"
          enqueue  : True
          backtrace: False
          colorize : False


    ### Send Log to Network system
    server_socket:
      - sink: "socket,localhost,5000"
        serialize: True
        enqueue  : True
        format   : "<green>{time:DD.MM.YY HH:mm:ss}</green> | <level>{level}</level> | <level>{message}</level>"



###### Template format for helpers
#formats:
#    'format0': "<green>{time:DD.MM.YY HH:mm:ss}</green> | <level>{level: <8}</level> | <cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> | <level>{message}</level>"
#    'format1': "<green>{time:DD.MM.YY HH:mm:ss}</green> | <level>{level: <8}</level> | <level>{message}</level>"
#    'format2': "<level>{level: <8}</level>|<cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> - <level>{message}</level>"
# format: "<green>{time:YYYY-MM-DD HH:mm:ss.SSS}</green> | <level>{level: <8}</level> | <cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> - <level>{message}</level>"






